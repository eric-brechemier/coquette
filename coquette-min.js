function privately(func){return func()}privately(function(){var undef,dataSpaces={},eventSpaces={},has,call;function no(value){return value===null||value===undef}function copy(array){return[].concat(array)}function remove(array,value){var i;for(i=array.length;i>=0;i--){if(array[i]===value){array.splice(i,1)}}}function forEach(array,callback){var isBreak=false,i,length=array.length;for(i=0;i<length&&!isBreak;i++){isBreak=callback(array[i],i)===true}return isBreak}function bind(func,object){return function(){return func.apply(object,arguments)}}function alias(func){return bind(func.call,func)}has=alias(Object.prototype.hasOwnProperty);call=alias(Function.prototype.call);function within(name,callback){var dataSpace,eventSpace;if(no(name)){dataSpace={};eventSpace={}}else{if(!has(dataSpaces,name)){dataSpaces[name]={};eventSpaces[name]={}}dataSpace=dataSpaces[name];eventSpace=eventSpaces[name]}function get(name){if(!has(dataSpace,name)){return undef}return dataSpace[name]}function set(name,value){dataSpace[name]=value}function publish(name,value){var listeners;if(arguments.length<2){value=true}set(name,value);if(!has(eventSpace,name)){return}listeners=copy(eventSpace[name]);forEach(listeners,function(listener){return call(listener,dataSpace,value)})}function subscribe(name,listener){var listeners;if(!has(eventSpace,name)){eventSpace[name]=[]}listeners=eventSpace[name];listeners.push(listener);if(has(dataSpace,name)){call(listener,dataSpace,dataSpace[name])}return function unsubscribe(){remove(listeners,listener)}}function space(callback){return callback.apply(dataSpace,[publish,subscribe,get,set])}if(arguments.length<2){space.publish=publish;space.subscribe=subscribe;space.get=get;space.set=set;return space}return space(callback)}this.within=within});within("github.com/eric-brechemier/coquette",function(publish,subscribe){function Collider(space){this.space=space}var isUncollisionOn=function(entities){for(var i=0,len=entities.length;i<len;i++){if(entities[i].uncollision!==undefined){return true}}return false};var isSetupForCollisions=function(obj){return obj.pos!==undefined&&obj.size!==undefined};Collider.prototype={collideRecords:[],update:function(){var ent=this.space.get("entities").all();for(var i=0,len=ent.length;i<len;i++){for(var j=i+1;j<len;j++){if(this.isColliding(ent[i],ent[j])){this.collision(ent[i],ent[j])}else{this.removeOldCollision(this.getCollideRecordIds(ent[i],ent[j])[0])}}}},collision:function(entity1,entity2){var collisionType;if(!isUncollisionOn(this.space.get("entities").all())){collisionType=this.INITIAL}else if(this.getCollideRecordIds(entity1,entity2).length===0){this.collideRecords.push([entity1,entity2]);collisionType=this.INITIAL}else{collisionType=this.SUSTAINED}notifyEntityOfCollision(entity1,entity2,collisionType);notifyEntityOfCollision(entity2,entity1,collisionType)},destroyEntity:function(entity){var recordIds=this.getCollideRecordIds(entity);for(var i=0;i<recordIds.length;i++){this.removeOldCollision(recordIds[i])}},removeOldCollision:function(recordId){var record=this.collideRecords[recordId];if(record!==undefined){notifyEntityOfUncollision(record[0],record[1]);notifyEntityOfUncollision(record[1],record[0]);this.collideRecords.splice(recordId,1)}},getCollideRecordIds:function(entity1,entity2){if(entity1!==undefined&&entity2!==undefined){var recordIds=[];for(var i=0,len=this.collideRecords.length;i<len;i++){if(this.collideRecords[i][0]===entity1&&this.collideRecords[i][1]===entity2){recordIds.push(i)}}return recordIds}else if(entity1!==undefined){for(var i=0,len=this.collideRecords.length;i<len;i++){if(this.collideRecords[i][0]===entity1||this.collideRecords[i][1]===entity1){return[i]}}return[]}else{throw"You must pass at least one entity when searching collision records."}},isColliding:function(obj1,obj2){return isSetupForCollisions(obj1)&&isSetupForCollisions(obj2)&&this.isIntersecting(obj1,obj2)},isIntersecting:function(obj1,obj2){var obj1BoundingBox=obj1.boundingBox||this.RECTANGLE;var obj2BoundingBox=obj2.boundingBox||this.RECTANGLE;if(obj1BoundingBox===this.RECTANGLE&&obj2BoundingBox===this.RECTANGLE){return Maths.rectanglesIntersecting(obj1,obj2)}else if(obj1BoundingBox===this.CIRCLE&&obj2BoundingBox===this.RECTANGLE){return Maths.circleAndRectangleIntersecting(obj1,obj2)}else if(obj1BoundingBox===this.RECTANGLE&&obj2BoundingBox===this.CIRCLE){return Maths.circleAndRectangleIntersecting(obj2,obj1)}else if(obj1BoundingBox===this.POINT&&obj2BoundingBox===this.RECTANGLE){return Maths.pointAndRectangleIntersecting(obj1,obj2)}else if(obj1BoundingBox===this.RECTANGLE&&obj2BoundingBox===this.POINT){return Maths.pointAndRectangleIntersecting(obj2,obj1)}else if(obj1BoundingBox===this.CIRCLE&&obj2BoundingBox===this.CIRCLE){return Maths.circlesIntersecting(obj1,obj2)}else if(obj1BoundingBox===this.POINT&&obj2BoundingBox===this.CIRCLE){return Maths.pointAndCircleIntersecting(obj1,obj2)}else if(obj1BoundingBox===this.CIRCLE&&obj2BoundingBox===this.POINT){return Maths.pointAndCircleIntersecting(obj2,obj1)}else if(obj1BoundingBox===this.POINT&&obj2BoundingBox===this.POINT){return Maths.pointsIntersecting(obj1,obj2)}else{throw"Objects being collision tested have unsupported bounding box types."}},INITIAL:0,SUSTAINED:1,RECTANGLE:0,CIRCLE:1,POINT:2};var orEqual=function(obj1BB,obj2BB,bBType1,bBType2){return obj1BB===bBType1&&obj2BB===bBType2||obj1BB===bBType2&&obj2BB===bBType1};var notifyEntityOfCollision=function(entity,other,type){if(entity.collision!==undefined){entity.collision(other,type)}};var notifyEntityOfUncollision=function(entity,other){if(entity.uncollision!==undefined){entity.uncollision(other)}};var Maths={center:function(obj){if(obj.pos!==undefined){return{x:obj.pos.x+obj.size.x/2,y:obj.pos.y+obj.size.y/2}}},circlesIntersecting:function(obj1,obj2){return Maths.distance(Maths.center(obj1),Maths.center(obj2))<obj1.size.x/2+obj2.size.x/2},pointAndCircleIntersecting:function(obj1,obj2){return this.distance(obj1.pos,this.center(obj2))<obj2.size.x/2},pointAndRectangleIntersecting:function(obj1,obj2){return this.pointInsideObj(obj1.pos,obj2)},pointsIntersecting:function(obj1,obj2){return obj1.pos.x===obj2.pos.x&&obj1.pos.y===obj2.pos.y},pointInsideObj:function(point,obj){return point.x>=obj.pos.x&&point.y>=obj.pos.y&&point.x<=obj.pos.x+obj.size.x&&point.y<=obj.pos.y+obj.size.y},rectanglesIntersecting:function(obj1,obj2){if(obj1.pos.x+obj1.size.x<obj2.pos.x){return false}else if(obj1.pos.x>obj2.pos.x+obj2.size.x){return false}else if(obj1.pos.y>obj2.pos.y+obj2.size.y){return false}else if(obj1.pos.y+obj1.size.y<obj2.pos.y){return false}else{return true}},distance:function(point1,point2){var x=point1.x-point2.x;var y=point1.y-point2.y;return Math.sqrt(x*x+y*y)},rectangleCorners:function(rectangleObj){var corners=[];corners.push({x:rectangleObj.pos.x,y:rectangleObj.pos.y});corners.push({x:rectangleObj.pos.x+rectangleObj.size.x,y:rectangleObj.pos.y});corners.push({x:rectangleObj.pos.x+rectangleObj.size.x,y:rectangleObj.pos.y+rectangleObj.size.y});corners.push({x:rectangleObj.pos.x,y:rectangleObj.pos.y+rectangleObj.size.y});return corners},vectorTo:function(start,end){return{x:end.x-start.x,y:end.y-start.y}},magnitude:function(vector){return Math.sqrt(vector.x*vector.x+vector.y*vector.y)},dotProduct:function(vector1,vector2){return vector1.x*vector2.x+vector1.y*vector2.y},unitVector:function(vector){return{x:vector.x/Maths.magnitude(vector),y:vector.y/Maths.magnitude(vector)}},closestPointOnSeg:function(linePointA,linePointB,circ_pos){var seg_v=Maths.vectorTo(linePointA,linePointB);var pt_v=Maths.vectorTo(linePointA,circ_pos);if(Maths.magnitude(seg_v)<=0){throw"Invalid segment length"}var seg_v_unit=Maths.unitVector(seg_v);var proj=Maths.dotProduct(pt_v,seg_v_unit);if(proj<=0){return linePointA}else if(proj>=Maths.magnitude(seg_v)){return linePointB}else{return{x:linePointA.x+seg_v_unit.x*proj,y:linePointA.y+seg_v_unit.y*proj}}},isLineIntersectingCircle:function(circleObj,linePointA,linePointB){var circ_pos={x:circleObj.pos.x+circleObj.size.x/2,y:circleObj.pos.y+circleObj.size.y/2};var closest=Maths.closestPointOnSeg(linePointA,linePointB,circ_pos);var dist_v=Maths.vectorTo(closest,circ_pos);return Maths.magnitude(dist_v)<circleObj.size.x/2},circleAndRectangleIntersecting:function(circleObj,rectangleObj){var corners=Maths.rectangleCorners(rectangleObj);return Maths.pointInsideObj(Maths.center(circleObj),rectangleObj)||Maths.isLineIntersectingCircle(circleObj,corners[0],corners[1])||Maths.isLineIntersectingCircle(circleObj,corners[1],corners[2])||Maths.isLineIntersectingCircle(circleObj,corners[2],corners[3])||Maths.isLineIntersectingCircle(circleObj,corners[3],corners[0])}};subscribe("create-game",function(space){space(function(){var collider=new Collider(space);space.subscribe("after-entities-update",function(){collider.update()});this.collider=collider})});this.Collider=Collider;this.Collider.Maths=Maths});within("github.com/eric-brechemier/coquette",function(publish,subscribe){var SPACE=32,LEFT_ARROW=37,UP_ARROW=38,RIGHT_ARROW=39,DOWN_ARROW=40;function preventScrolling(e){var suppressedKeys=[SPACE,LEFT_ARROW,UP_ARROW,RIGHT_ARROW,DOWN_ARROW];for(var i=0;i<suppressedKeys.length;i++){if(suppressedKeys[i]===e.keyCode){e.preventDefault();return}}}function suppressScrolling(){window.addEventListener("keydown",preventScrolling,false)}function configureCanvasFocus(space,suppressedKeys){var autoFocus=space.get("autoFocus"),canvas=space.get("canvas");var inputReceiverElement=window;if(autoFocus===false){inputReceiverElement=canvas;canvas.contentEditable=true}else{suppressScrolling()}}function configureKeyListeners(space,onKeyDown,onKeyUp){var autoFocus=space.get("autoFocus"),canvas=space.get("canvas"),inputReceiverElement;if(autoFocus===false){inputReceiverElement=canvas}else{inputReceiverElement=window}inputReceiverElement.addEventListener("keydown",onKeyDown,false);inputReceiverElement.addEventListener("keyup",onKeyUp,false)}function Inputter(space){var keyDownState={},keyPressedState={};this.space=space;space.set("keyDownState",keyDownState);space.set("keyPressedState",keyPressedState);function onKeyDown(e){keyDownState[e.keyCode]=true;if(keyPressedState[e.keyCode]===undefined){keyPressedState[e.keyCode]=true}}function onKeyUp(e){keyDownState[e.keyCode]=false;if(keyPressedState[e.keyCode]===false){keyPressedState[e.keyCode]=undefined}}configureCanvasFocus(space);configureKeyListeners(space,onKeyDown,onKeyUp)}Inputter.prototype={update:function(){var keyPressedState=this.space.get("keyPressedState");for(var i in keyPressedState){if(keyPressedState[i]===true){keyPressedState[i]=false}}},down:function(keyCode){return this.space.get("keyDownState")[keyCode]||false},pressed:function(keyCode){return this.space.get("keyPressedState")[keyCode]||false},BACKSPACE:8,TAB:9,ENTER:13,SHIFT:16,CTRL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT_ARROW:37,UP_ARROW:38,RIGHT_ARROW:39,DOWN_ARROW:40,INSERT:45,DELETE:46,ZERO:48,ONE:49,TWO:50,THREE:51,FOUR:52,FIVE:53,SIX:54,SEVEN:55,EIGHT:56,NINE:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,NUM_LOCK:144,SCROLL_LOCK:145,SEMI_COLON:186,EQUALS:187,COMMA:188,DASH:189,PERIOD:190,FORWARD_SLASH:191,GRAVE_ACCENT:192,OPEN_SQUARE_BRACKET:219,BACK_SLASH:220,CLOSE_SQUARE_BRACKET:221,SINGLE_QUOTE:222};Inputter.prototype.state=Inputter.prototype.down;subscribe("create-game",function(space){space(function(){var inputter=new Inputter(space);space.subscribe("after-display-update",function(){inputter.update()});this.inputter=inputter})});this.Inputter=Inputter});within("github.com/eric-brechemier/coquette",function(publish,subscribe){function Ticker(gameLoop){setupRequestAnimationFrame();var nextTickFn;this.stop=function(){nextTickFn=function(){}};this.start=function(){var prev=(new Date).getTime();var tick=function(){var now=(new Date).getTime();var interval=now-prev;prev=now;gameLoop(interval);requestAnimationFrame(nextTickFn)};nextTickFn=tick;requestAnimationFrame(nextTickFn)};this.start()}var setupRequestAnimationFrame=function(){var lastTime=0;var vendors=["ms","moz","webkit","o"];for(var x=0;x<vendors.length&&!window.requestAnimationFrame;++x){window.requestAnimationFrame=window[vendors[x]+"RequestAnimationFrame"];window.cancelAnimationFrame=window[vendors[x]+"CancelAnimationFrame"]||window[vendors[x]+"CancelRequestAnimationFrame"]}if(!window.requestAnimationFrame){window.requestAnimationFrame=function(callback,element){var INTERVAL=16;var currTime=(new Date).getTime();var timeToCall=Math.max(0,INTERVAL-(currTime-lastTime));var id=window.setTimeout(function(){callback(currTime+timeToCall)},timeToCall);lastTime=currTime+timeToCall;return id}}if(!window.cancelAnimationFrame){window.cancelAnimationFrame=function(id){clearTimeout(id)}}};subscribe("game-created",function(space){space(function(){this.ticker=new Ticker(function(interval){space.publish("tick",interval)})})});this.Ticker=Ticker});within("github.com/eric-brechemier/coquette",function(publish,subscribe){var Maths=this.Collider.Maths;function configureCanvas(space){var canvas=space.get("canvas");canvas.style.outline="none";canvas.style.cursor="default";canvas.width=space.get("width");canvas.height=space.get("height")}function initCanvasContext(space){var canvas=space.get("canvas");space.set("canvasContext",canvas.getContext("2d"))}function centerView(space){var width=space.get("width"),height=space.get("height");space.set("viewCenterX",width/2);space.set("viewCenterY",height/2)}function Renderer(space){this.space=space;configureCanvas(space);initCanvasContext(space);centerView(space)}Renderer.prototype={getCtx:function(){return this.space.get("canvasContext")},getBackgroundColor:function(){return this.space.get("backgroundColor")},getViewSize:function(){return{x:this.space.get("width"),y:this.space.get("height")}},getViewCenterPos:function(){return{x:this.space.get("viewCenterX"),y:this.space.get("viewCenterY")}},setViewCenterPos:function(pos){this.space.set("viewCenterX",pos.x);this.space.set("viewCenterY",pos.y)},update:function(){var ctx=this.getCtx(),game=this.space.get("game"),gameEntities=this.space.get("entities").all();var viewSize=this.getViewSize(),viewCenterPos=this.getViewCenterPos(),viewTranslate=viewOffset(viewCenterPos,viewSize);ctx.translate(-viewTranslate.x,-viewTranslate.y);ctx.fillStyle=this.getBackgroundColor();ctx.fillRect(viewCenterPos.x-viewSize.x/2,viewCenterPos.y-viewSize.y/2,viewSize.x,viewSize.y);var drawables=[game].concat(gameEntities.concat().sort(zindexSort));for(var i=0,len=drawables.length;i<len;i++){if(drawables[i].draw!==undefined){drawables[i].draw(ctx)}}ctx.translate(viewTranslate.x,viewTranslate.y)},onScreen:function(obj){var viewSize=this.getViewSize(),viewCenterPos=this.getViewCenterPos();return Maths.rectanglesIntersecting(obj,{size:viewSize,pos:{x:viewCenterPos.x-viewSize.x/2,y:viewCenterPos.y-viewSize.y/2}})}};var viewOffset=function(viewCenterPos,viewSize){return{x:viewCenterPos.x-viewSize.x/2,y:viewCenterPos.y-viewSize.y/2}};var zindexSort=function(a,b){return(a.zindex||0)<(b.zindex||0)?-1:1};subscribe("create-game",function(space){space(function(){var renderer=new Renderer(space);space.subscribe("update-display",function(){renderer.update()});this.renderer=renderer})});this.Renderer=Renderer});within("github.com/eric-brechemier/coquette",function(publish,subscribe){function Entities(space){this.space=space;space.set("gameEntities",[])}function runOnce(space,event,callback){var isReady=false,unsubscribe=space.subscribe(event,function(){if(!isReady){return}unsubscribe();return callback.apply(this,arguments)});isReady=true}Entities.prototype={update:function(interval){var entities=this.all();for(var i=0,len=entities.length;i<len;i++){if(entities[i].update!==undefined){entities[i].update(interval)}}},all:function(Constructor){var gameEntities=this.space.get("gameEntities");if(Constructor===undefined){return gameEntities}else{var entities=[];for(var i=0;i<gameEntities.length;i++){if(gameEntities[i]instanceof Constructor){entities.push(gameEntities[i])}}return entities}},create:function(clazz,settings,callback){var space=this.space,game=space.get("game"),gameEntities=space.get("gameEntities");runOnce(space,"create-entities",function(){var entity=new clazz(game,settings||{});gameEntities.push(entity);if(callback!==undefined){callback(entity)}})},destroy:function(entity,callback){var space=this.space,gameEntities=space.get("gameEntities");runOnce(space,"destroy-entities",function(){for(var i=0;i<gameEntities.length;i++){if(gameEntities[i]===entity){space.get("collider").destroyEntity(entity);gameEntities.splice(i,1);if(callback!==undefined){callback()}break}}})}};subscribe("create-game",function(space){space(function(){var entities=new Entities(space);space.subscribe("before-entities-update",function(){space.publish("create-entities");space.publish("destroy-entities")});space.subscribe("update-entities",function(interval){entities.update(interval)});this.entities=entities})});this.Entities=Entities});this.Coquette=within("github.com/eric-brechemier/coquette",function(publish,subscribe){function Coquette(game,canvasId,width,height,backgroundColor,autoFocus){var space=within();space.subscribe("tick",function(interval){space.publish("before-entities-update",interval);space.publish("update-entities",interval);space.publish("after-entities-update",interval);space.publish("before-game-update",interval);space.publish("update-game",interval);space.publish("after-game-update",interval);space.publish("before-display-update",interval);space.publish("update-display",interval);space.publish("after-display-update",interval)});space.subscribe("update-game",function(interval){if(game.update!==undefined){game.update(interval)}});return space(function(){this.game=game;this.canvas=document.getElementById(canvasId);this.width=width;this.height=height;this.backgroundColor=backgroundColor;this.autoFocus=autoFocus;publish("create-game",space);publish("game-created",space);return this})}return Coquette})